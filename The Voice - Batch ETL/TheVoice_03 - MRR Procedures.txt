
//MRR CALL_TYPE
CREATE OR REPLACE TABLE THEVOICE.MRR.CALL_TYPE (
    CALL_TYPE VARCHAR,
    CALL_TYPE_CODE VARCHAR,
    CALL_TYPE_DESC VARCHAR,
    PRICE_PER_MINUNTE FLOAT
);


CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_CALL_TYPE()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        TRUNCATE TABLE THEVOICE.MRR.CALL_TYPE;
        
        INSERT INTO THEVOICE.MRR.CALL_TYPE
        SELECT $1:call_type        ::VARCHAR AS CALL_TYPE,
               $1:call_type_code   ::VARCHAR AS CALL_TYPE_CODE,
               $1:call_type_desc   ::VARCHAR AS CALL_TYPE_DESC,
               $1:priceperminuter  ::FLOAT   AS PRICE_PER_MINUTER
        FROM @THEVOICE.MANAGE.GENERAL/call_type; 
        RETURN 'CALL TYPE LOADED SUCCESSFULLY';
    END;
$$;


//MRR CUSTOMER
CREATE OR REPLACE TABLE THEVOICE.MRR.CUSTOMER (
    CUST_NUMBER INT,
    ADDRESS VARCHAR,
    CUST_NAME VARCHAR,
    CUSTOMER_ID INT,
    INSERT_DATE DATETIME
);


CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_CUSTOMER()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        TRUNCATE TABLE THEVOICE.MRR.CUSTOMER;
        
        INSERT INTO THEVOICE.MRR.CUSTOMER
        SELECT $1:CUST_NUMBER  ::INT      AS CUST_NUMBER,
               $1:address      ::VARCHAR  AS ADDRESS,
               $1:cust_name    ::VARCHAR  AS CUST_NAME,
               $1:customer_id  ::INT      AS CUSTOMER_ID,
               $1:insert_date  ::DATETIME AS INSERT_DATE
        FROM @THEVOICE.MANAGE.GENERAL/customer;
        RETURN 'CUSTOMER LOADED SUCCESSFULLY';
    END;
$$;


//MRR COUNTRIES
CREATE OR REPLACE TABLE THEVOICE.MRR.COUNTRIES (
    AREA VARCHAR,
    COUNTRY_CODE VARCHAR,
    REGION VARCHAR,
    INSERT_DATE DATETIME
);


CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_COUNTRIES()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        TRUNCATE TABLE THEVOICE.MRR.COUNTRIES;
        
        INSERT INTO THEVOICE.MRR.COUNTRIES
        SELECT $1:AREA          ::VARCHAR  AS AREA,
               $1:COUNTRY_CODE  ::VARCHAR  AS COUNTRY_CODE,
               $1:REGION        ::VARCHAR  AS REGION,
               $1:insert_date   ::DATETIME AS INSERT_DATE
        FROM @THEVOICE.MANAGE.GENERAL/countries;
        RETURN 'COUNTIRES LOADED SUCCESSFULLY';
    END;
$$;


CREATE OR REPLACE TABLE THEVOICE.MRR.CUSTOMER_INVOICE (
    INVOICE_AMOUNT INT,      
    INVOICE_CURRNCY VARCHAR,  
    INVOICE_DATE DATE,     
    INVOICE_DESC VARCHAR,  
    INVOICE_IND INT,      
    INVOICE_NUM INT,      
    INVOICE_TYPE VARCHAR,  
    PHONE_NO INT,      
    INSERT_DATE DATE     
);


//MRR CUSTOMER_INVOICE
CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_CUSTOMER_INVOICE()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        TRUNCATE TABLE THEVOICE.MRR.CUSTOMER_INVOICE;
        
        INSERT INTO THEVOICE.MRR.CUSTOMER_INVOICE
        SELECT $1:INVOICE_AMOUNT   ::INT      AS INVOICE_AMOUNT,
               $1:INVOICE_CURRNCY  ::VARCHAR  AS INVOICE_CURRNCY,
               $1:INVOICE_DATE     ::DATE     AS INVOICE_DATE,
               $1:INVOICE_DESC     ::VARCHAR  AS INVOICE_DESC,
               $1:INVOICE_IND      ::INT      AS INVOICE_IND,
               $1:INVOICE_NUM      ::INT      AS INVOICE_NUM,
               $1:INVOICE_TYPE     ::VARCHAR  AS INVOICE_TYPE,
               $1:PHONE_NO         ::INT      AS PHONE_NO,
               $1:insert_date      ::DATE     AS INSERT_DATE
        FROM @THEVOICE.MANAGE.GENERAL/customer_invoice;
        RETURN 'CUSTOMER_INVOICE LOADED SUCCESSFULLY';
    END;
$$;



CREATE OR REPLACE TABLE THEVOICE.MRR.CUSTOMER_LINES (
    PHONE_NO      INT,
    CREATE_DATE   DATETIME,
    END_DATE      DATETIME,
    STATUS        INT,
    TYPE          VARCHAR,
    DESC          VARCHAR,
    INSERT_DATE   DATETIME,
    UPDATE_DATE   DATETIME,
    DISCOUNT_PCT  INT,
    NUMBER_OF_FREE_MINUTES FLOAT
);


//MRR CUSTOMER_LINES
CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_CUSTOMER_LINES()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        TRUNCATE TABLE THEVOICE.MRR.CUSTOMER_LINES;
        
        INSERT INTO THEVOICE.MRR.CUSTOMER_LINES
        SELECT $1:PHONE_NO             ::INT      AS PHONE_NO,
               $1:createdate           ::DATETIME AS CREATE_DATE,
               $1:enddate              ::DATETIME AS END_DATE,
               $1:status               ::INT      AS STATUS,
               $1:TYPE                 ::VARCHAR  AS TYPE,
               $1:DESC                 ::VARCHAR  AS DESC,
               $1:insert_date          ::DATETIME AS INSERT_DATE,
               $1:update_date          ::DATETIME AS UPDATE_DATE,
               $1:discountpct          ::INT      AS DISCOUNT_PCT,
               $1:numberoffreeminutes  ::FLOAT    AS NUMBER_OF_FREE_MINUTES
        FROM @THEVOICE.MANAGE.GENERAL/customer_lines;
        RETURN 'CUSTOMER_LINES LOADED SUCCESSFULLY';
    END;
$$;


// MRR PACKAGE_CATALOG
CREATE OR REPLACE TABLE THEVOICE.MRR.PACKAGE_CATALOG (
    PACKAGE_NUM INT,
    CREATE_DATE VARCHAR,
    END_DATE    VARCHAR,
    STATUS      INT,
    PACK_TYPE   VARCHAR,
    PACK_DESC   VARCHAR,
    INSERT_DATE VARCHAR,
    UPDATE_DATE DATETIME     
);


CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_PACKAGE_CATALOG()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        TRUNCATE TABLE THEVOICE.MRR.PACKAGE_CATALOG;
        
        INSERT INTO THEVOICE.MRR.PACKAGE_CATALOG
        SELECT $1:PACKAGE_NUM  ::INT      AS PACKAGE_NUM,
               $1:createdate   ::VARCHAR  AS CREATE_DATE,
               $1:enddate      ::VARCHAR  AS END_DATE,
               $1:status       ::INT      AS STATUS,
               $1:pack_type    ::VARCHAR  AS PACK_TYPE,
               $1:pack_desc    ::VARCHAR  AS PACK_DESC,
               $1:insert_date  ::VARCHAR  AS INSERT_DATE,
               $1:update_date  ::DATETIME AS UPDATE_DATE
        FROM @THEVOICE.MANAGE.GENERAL/package_catalog;
        RETURN 'PACKAGE_CATALOG LOADED SUCCESSFULLY';
    END;
$$;


//MRR OPFILEOPP
CREATE OR REPLACE TABLE THEVOICE.MRR.PFILEOPP (
    OPCCC INT,
    OPDDD VARCHAR,
    PREPRE INT
);


CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_PFILEOPP()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        TRUNCATE TABLE THEVOICE.MRR.PFILEOPP;
        
        INSERT INTO THEVOICE.MRR.PFILEOPP
        SELECT $1:OPCCC   ::INT     AS OPCCC,
               $1:OPDDD   ::VARCHAR AS OPDDD,
               $1:prepre  ::INT     AS PREPRE
        FROM @THEVOICE.MANAGE.GENERAL/pfileopp; 
        RETURN 'PFILEOPP LOADED SUCCESSFULLY';
    END;
$$;


// MRR USAGE_MAIN
CREATE OR REPLACE TABLE THEVOICE.MRR.USAGE_MAIN (    
    CALL_NO          INT,     
    ANSWER_TIME      VARCHAR, 
    SEIZED_TIME      VARCHAR, 
    DISCONNECT_TIME  VARCHAR, 
    CALL_DATETIME    VARCHAR, 
    CALLING_NO       INT,     
    CALLED_NO        INT,     
    DES_NO           INT,     
    DURATION         INT,     
    CUST_ID          INT,     
    CALL_TYPE        VARCHAR, 
    PROD_TYPE        VARCHAR, 
    RATED_AMNT       INT,     
    RATED_CURR_CODE  VARCHAR, 
    CELL             INT,     
    CELL_ORIGIN      INT,     
    HIGH_LOW_RATE    INT,     
    INSERT_DATE      VARCHAR, 
    UPDATE_DATE      FLOAT   
);


CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_USAGE_MAIN()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        TRUNCATE TABLE THEVOICE.MRR.USAGE_MAIN;
        
        INSERT INTO THEVOICE.MRR.USAGE_MAIN
        SELECT $1:CALL_NO          ::INT     AS CALL_NO,
               $1:ANSWER_TIME      ::VARCHAR AS ANSWER_TIME,      
               $1:SEIZED_TIME      ::VARCHAR AS SEIZED_TIME,     
               $1:DISCONNECT_TIME  ::VARCHAR AS DISCONNECT_TIME,  
               $1:CALL_DATETIME    ::VARCHAR AS CALL_DATETIME,    
               $1:CALLING_NO       ::INT     AS CALLING_NO,      
               $1:CALLED_NO        ::INT     AS CALLED_NO,         
               $1:DES_NO           ::INT     AS DES_NO,           
               $1:DURATION         ::INT     AS DURATION,        
               $1:CUST_ID          ::INT     AS CUST_ID,          
               $1:CALL_TYPE        ::VARCHAR AS CALL_TYPE,        
               $1:PROD_TYPE        ::VARCHAR AS PROD_TYPE,        
               $1:RATED_AMNT       ::INT     AS RATED_AMNT,        
               $1:RATED_CURR_CODE  ::VARCHAR AS RATED_CURR_CODE,    
               $1:CELL             ::INT     AS CELL,              
               $1:CELL_ORIGIN      ::INT     AS CELL_ORIGIN,       
               $1:HIGH_LOW_RATE    ::INT     AS HIGH_LOW_RATE,      
               $1:insert_DATE      ::VARCHAR AS INSERT_DATE,         
               $1:update_date      ::FLOAT   AS UPDATE_DATE          
        FROM @THEVOICE.MANAGE.GENERAL/usage_main; 

        RETURN 'USAGE_MAIN LOADED SUCCESSFULLY';
    END;
$$;


// MRR XX_COUNTRY_TYPE
CREATE OR REPLACE TABLE THEVOICE.MRR.XX_COUNTRY_TYPE (    
    COUNTRY_CODE VARCHAR,
    COUNTRY_PRE INT
);


CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_XX_COUNTRY_TYPE()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        TRUNCATE TABLE THEVOICE.MRR.XX_COUNTRY_TYPE;
        
        INSERT INTO THEVOICE.MRR.XX_COUNTRY_TYPE
        SELECT $1:COUNTRY_CODE  ::VARCHAR AS COUNTRY_CODE,
               $1:COUNTRY_PRE   ::INT     AS COUNTRY_PRE
        FROM @THEVOICE.MANAGE.GENERAL/xxCountryType;  
        RETURN 'XX_COUNTRY_TYPE LOADED SUCCESSFULLY';
    END;
$$;


// MRR DIM_DATE
CREATE OR REPLACE TABLE THEVOICE.MRR.DIM_DATE(
     FullDate       DATETIME
     ,KeyDate       INT
     ,KeyMonth      INT
     ,CodeYear      INT
     ,CodeQuarter   INT
     ,CodeMonth     INT
     ,DescMonth     VARCHAR(10)
     ,CodeDayInWeek INT
     ,DescDayInWeek VARCHAR(10)
);


CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_DIM_DATE()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        TRUNCATE TABLE THEVOICE.MRR.DIM_DATE;
        
        INSERT INTO THEVOICE.MRR.DIM_DATE
        SELECT $1:FullDate       ::DATETIME  AS FULLDATE,               
               $1:KeyDate        ::INT       AS KEYDATE,       
               $1:KeyMonth       ::INT       AS KEYMONTH,             
               $1:CodeYear       ::INT       AS CODEYEAR,           
               $1:CodeQuarter    ::INT       AS CODEQUARTER,        
               $1:CodeMonth      ::INT       AS CODEMONTH,              
               $1:DescMonth      ::VARCHAR   AS DESCMONTH,              
               $1:CodeDayInWeek  ::INT       AS CODEDAYINWEEK,          
               $1:DescDayInWeek  ::VARCHAR   AS DESCDAYINWEEK              
        FROM @THEVOICE.MANAGE.GENERAL/dim_date;
    
        RETURN 'MRR DIM_DATE SUCCESSFULLY LOADED';
    END;
$$;


// RUN MRR PROCEDURES
CREATE OR REPLACE PROCEDURE THEVOICE.MRR.SP_RUN_MRR()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
    BEGIN
        CALL THEVOICE.MRR.SP_CALL_TYPE();
        CALL THEVOICE.MRR.SP_COUNTRIES();
        CALL THEVOICE.MRR.SP_CUSTOMER_INVOICE();
        CALL THEVOICE.MRR.SP_CUSTOMER_LINES();
        CALL THEVOICE.MRR.SP_PACKAGE_CATALOG();
        CALL THEVOICE.MRR.SP_PFILEOPP();
        CALL THEVOICE.MRR.SP_USAGE_MAIN();
        CALL THEVOICE.MRR.SP_XX_COUNTRY_TYPE();
        CALL THEVOICE.MRR.SP_DIM_DATE();
        RETURN 'MRR TABLES LOADED';
    END;
$$;
