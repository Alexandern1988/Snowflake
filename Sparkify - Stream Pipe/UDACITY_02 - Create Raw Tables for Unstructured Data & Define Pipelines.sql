
// Copy log data from s3 into raw json table
CREATE OR REPLACE TABLE UDACITY.STAGING.RAW_LOG_DATA (
    raw variant
);

// Copy song data from s3 into raw json table
CREATE OR REPLACE TABLE UDACITY.STAGING.RAW_SONG_DATA (
    raw variant
);

---------------------------------------------------------------------

// Truncate tables after testing the copy command
TRUNCATE TABLE UDACITY.STAGING.RAW_LOG_DATA;
TRUNCATE TABLE UDACITY.STAGING.RAW_SONG_DATA;

// Define pipe from log data
CREATE OR REPLACE PIPE UDACITY.STAGING.LOG_DATA_PIPE
AUTO_INGEST = TRUE
AS
COPY INTO UDACITY.STAGING.RAW_LOG_DATA
FROM @UDACITY.STAGING.AWS_STAGE_LOG_DATA;

// Get notification channel id string
DESC PIPE UDACITY.STAGING.LOG_DATA_PIPE;


// Refresh pipe to make sure files are sent
ALTER PIPE UDACITY.STAGING.LOG_DATA_PIPE REFRESH;

// Make sure pipe status is running
SELECT SYSTEM$PIPE_STATUS('LOG_DATA_PIPE');

SELECT * FROM TABLE(
    INFORMATION_SCHEMA.COPY_HISTORY(
        TABLE_NAME => 'RAW_LOG_DATA'
        ,START_TIME => DATEADD(HOUR, -2, CURRENT_TIMESTAMP())
    )
);

SELECT * FROM TABLE(VALIDATE_PIPE_LOAD(
    PIPE_NAME  => 'UDACITY.STAGING.LOG_DATA_PIPE',
    START_TIME => DATEADD(HOUR, -2, CURRENT_TIMESTAMP())
));

LIST @UDACITY.STAGING.AWS_STAGE_LOG_DATA;

SELECT count(*) FROM UDACITY.STAGING.RAW_LOG_DATA;


// Define pipe for song data
CREATE OR REPLACE PIPE UDACITY.STAGING.SONG_DATA_PIPE
AUTO_INGEST = TRUE
AS
COPY INTO UDACITY.STAGING.RAW_SONG_DATA
FROM @UDACITY.STAGING.AWS_STAGE_SONG_DATA;

DESC PIPE UDACITY.STAGING.SONG_DATA_PIPE;


ALTER PIPE UDACITY.STAGING.SONG_DATA_PIPE REFRESH;

SELECT SYSTEM$PIPE_STATUS('SONG_DATA_PIPE');

SELECT * FROM TABLE(
    INFORMATION_SCHEMA.COPY_HISTORY(
        TABLE_NAME => 'RAW_SONG_DATA'
        ,START_TIME => DATEADD(HOUR, -1, CURRENT_TIMESTAMP())
    )
);

SELECT * FROM TABLE(VALIDATE_PIPE_LOAD(
    PIPE_NAME  => 'UDACITY.STAGING.SONG_DATA_PIPE',
    START_TIME => DATEADD(HOUR, -1, CURRENT_TIMESTAMP())
));


LIST @UDACITY.STAGING.AWS_STAGE_SONG_DATA;

SELECT count(*) FROM UDACITY.STAGING.RAW_SONG_DATA;



// Show existing pipes
SHOW PIPES;

SELECT SYSTEM$PIPE_STATUS( 'LOG_DATA_PIPE');
SELECT SYSTEM$PIPE_STATUS( 'SONG_DATA_PIPE');

DROP PIPE LOG_DATA_PIPE;
DROP PIPE SONG_DATA_PIPE;